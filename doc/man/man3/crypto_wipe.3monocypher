.Dd October 20, 2017
.Dt CRYPTO_WIPE 3MONOCYPHER
.Os
.Sh NAME
.Nm crypto_wipe
.Nd wipe data from memory
.Sh SYNOPSIS
.In monocypher.h
.Ft int
.Fn crypto_wipe "void *secret" "size_t size"
.Sh DESCRIPTION
Secrets and values derived from them should stay in memory for the
shortest possible amount of time.
.Fn crypto_wipe
allows zeroing out contents that contain secrets.
A secret may be a cryptographic key or a decrypted message.
The arguments are:
.Bl -tag -width Ds
.It Fa secret
the buffer to erase.
.It Fa size
the number of bytes to erase from the buffer.
This will normally be the entire buffer.
.El
.Pp
Monocypher will wipe its context structs when finalizing an operation
such as signing or decrypting.
When using direct interfaces like
.Xr crypto_lock 3monocypher ,
these context structs are invisible to you.
They are exposed in incremental interfaces like
.Xr crypto_lock_init 3monocypher .
The original key buffer does not get automatically wiped.
When using incremental interfaces, you may want to wipe the original key
buffer(s) immediately after calling the respective init function.
.Pp
Using
.Fn crypto_wipe
alone may not suffice for security.
It is recommended to lock down relevant memory regions as well.
Refer to
.Xr intro 3monocypher
for instructions on how to lock down memory on common operating systems.
.Sh RETURN VALUES
This function returns nothing.
It cannot fail.
.Sh SEE ALSO
.Xr intro 3monocypher
